/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceGraphique;

import DAO.CoachDao;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.TitledBorder;
import DAO.DaoFactory;
import DAO.DaoFactoryInterface;
import DAO.MatchDao;
import DAO.Match_playerDaoImpl;
import DAO.PlayerDao;
import DAO.RefereeDao;
import entities.Coach;
import entities.Match;
import entities.Player;
import entities.Referee;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import oracle.net.aso.p;


/**
 *
 * @author Ludovic
 */
public class MenuPrincipal extends javax.swing.JFrame {
    private int jour;
    private static final DaoFactoryInterface fact = null;
    PlayerDao pdao = fact.getPlayerDao();
    private List<Player> allPlayer = pdao.selectAllPlayer();
        
    CoachDao cdao = fact.getCoachDao();
    private List<Coach> allCoach = cdao.selectAllCoach();
        
    RefereeDao rdao = fact.getRefereeDao();
    private List<Referee> allReferee = rdao.selectAllReferee();
    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() throws IOException, SQLException {
        jour = 22;
        //comboBoxProtagoniste1 = new javax.swing.JComboBox(listeProtagonistes.toArray());
        //comboBoxProtagoniste2 = new javax.swing.JComboBox(listeProtagonistes.toArray());
        initComponents();
        setVisible(true);
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension d = tk.getScreenSize();
        setLocation((d.width-this.getWidth()) / 2, (d.height-this.getHeight()) / 2);
        gestionMatchs.setSize(1040, 550);
        gestionMatchs.setLocation((d.width-gestionMatchs.getWidth()) / 2, (d.height-gestionMatchs.getHeight()) / 2);
        courtChoice.add("Tous");
        courtChoice.add("Court central");
        courtChoice.add("Court annexe");
        courtChoice.add("Court d'entrainement 1");
        courtChoice.add("Court d'entrainement 2");
        courtChoice.add("Court d'entrainement 3");
        courtChoice.add("Court d'entrainement 4");
        heureChoice.add("Tous");
        heureChoice.add("8h");
        heureChoice.add("11h");
        heureChoice.add("15h");
        heureChoice.add("18h");
        heureChoice.add("21h");
        heureChoice.select("8h");

        fenAddMatch.setSize(620, 300);
        fenAddMatch.setLocation((d.width-fenAddMatch.getWidth()) / 2, (d.height-fenAddMatch.getHeight()) / 2);
        
        gestionVIP.setSize(650, 660);
        gestionVIP.setLocation((d.width-gestionVIP.getWidth()) / 2, (d.height-gestionVIP.getHeight()) / 2);
        remplirTableVIP(tableVIP);
        
        gestionRelationActionVIP.setSize(535, 540);
        gestionRelationActionVIP.setLocation((d.width-gestionVIP.getWidth()) / 2, (d.height-gestionVIP.getHeight()) / 2);
        remplirComboBoxConsulteVIP();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gestionMatchs = new javax.swing.JDialog();
        lbPlanning = new javax.swing.JLabel();
        lbNumJour = new javax.swing.JLabel();
        panPlanning = new javax.swing.JPanel();
        panMatch1 = new javax.swing.JPanel();
        match1J1 = new javax.swing.JLabel();
        match1vs = new javax.swing.JLabel();
        match1J2 = new javax.swing.JLabel();
        match1Plus = new javax.swing.JButton();
        panMatch2 = new javax.swing.JPanel();
        match2J1 = new javax.swing.JLabel();
        match2vs = new javax.swing.JLabel();
        match2J2 = new javax.swing.JLabel();
        match2Pus = new javax.swing.JButton();
        panMatch3 = new javax.swing.JPanel();
        match3J1 = new javax.swing.JLabel();
        match3vs = new javax.swing.JLabel();
        match3J2 = new javax.swing.JLabel();
        match3Plus = new javax.swing.JButton();
        panMatch4 = new javax.swing.JPanel();
        match4J1 = new javax.swing.JLabel();
        match4vs = new javax.swing.JLabel();
        match4J2 = new javax.swing.JLabel();
        match4Plus = new javax.swing.JButton();
        panMatch5 = new javax.swing.JPanel();
        match5J1 = new javax.swing.JLabel();
        match5vs = new javax.swing.JLabel();
        match5J2 = new javax.swing.JLabel();
        match5Plus = new javax.swing.JButton();
        panMatch6 = new javax.swing.JPanel();
        match6J1 = new javax.swing.JLabel();
        match6vs = new javax.swing.JLabel();
        match6J2 = new javax.swing.JLabel();
        match6Plus = new javax.swing.JButton();
        panGestion = new javax.swing.JPanel();
        btPrec = new javax.swing.JButton();
        btSuiv = new javax.swing.JButton();
        btAdd = new javax.swing.JButton();
        btModif = new javax.swing.JButton();
        btSupp = new javax.swing.JButton();
        btRetour = new javax.swing.JButton();
        panSelect = new javax.swing.JPanel();
        courtChoice = new java.awt.Choice();
        heureChoice = new java.awt.Choice();
        lbSelectCourt = new javax.swing.JLabel();
        lbSelectHeure = new javax.swing.JLabel();
        lbSelected = new javax.swing.JLabel();
        barreOutilsMatch = new javax.swing.JMenuBar();
        menuFichierMatch = new javax.swing.JMenu();
        menuQuitterMatch = new javax.swing.JMenuItem();
        gestionVIP = new javax.swing.JDialog();
        panListeVIP = new javax.swing.JPanel();
        scrollTableVIP = new javax.swing.JScrollPane();
        tableVIP = new javax.swing.JTable();
        panGestionVIP = new javax.swing.JPanel();
        btnSuppr = new javax.swing.JButton();
        btnConsult = new javax.swing.JButton();
        panAjoutVIP = new javax.swing.JPanel();
        txtFieldBirthdate = new javax.swing.JTextField();
        nom = new javax.swing.JLabel();
        prenom = new javax.swing.JLabel();
        birthdate = new javax.swing.JLabel();
        txtFieldPrenom = new javax.swing.JTextField();
        txtFieldNom = new javax.swing.JTextField();
        ajouterVIP = new javax.swing.JButton();
        radioBtnJoueur = new javax.swing.JRadioButton();
        radioBtnCoach = new javax.swing.JRadioButton();
        radioBtnArbitre = new javax.swing.JRadioButton();
        radioBtnInviteSpe = new javax.swing.JRadioButton();
        radioBtnJournaliste = new javax.swing.JRadioButton();
        lblRange = new javax.swing.JLabel();
        txtFieldRang = new javax.swing.JTextField();
        lblJoueurCoach = new javax.swing.JLabel();
        lblRepCoach = new javax.swing.JLabel();
        txtFieldJoueurCoach = new javax.swing.JTextField();
        txtFieldRepCoach = new javax.swing.JTextField();
        lblNbMatchArbitre = new javax.swing.JLabel();
        lblCategArbitre = new javax.swing.JLabel();
        txtFieldNbMatchArbitre = new javax.swing.JTextField();
        txtFieldCategArbitre = new javax.swing.JTextField();
        barreOutilsVIP = new javax.swing.JMenuBar();
        menuFichierVIP = new javax.swing.JMenu();
        menuQuitterVIP = new javax.swing.JMenuItem();
        BtnGroupJCAIJ = new javax.swing.ButtonGroup();
        fenAddMatch = new javax.swing.JDialog();
        addFen_PanJoueurs = new javax.swing.JPanel();
        addFen_lbJ1 = new javax.swing.JLabel();
        addFen_lbVs = new javax.swing.JLabel();
        addFen_lbJ2 = new javax.swing.JLabel();
        addFen_choiceJ1 = new java.awt.Choice();
        addFen_choiceJ2 = new java.awt.Choice();
        addFen_PanHeure = new javax.swing.JPanel();
        addFen_lbChoixHeure = new javax.swing.JLabel();
        addFen_choiceHeure = new java.awt.Choice();
        addFen_PanCourt = new javax.swing.JPanel();
        addFen_lbChoixCourt = new javax.swing.JLabel();
        addFen_choiceCourt = new java.awt.Choice();
        addFen_btAdd = new javax.swing.JButton();
        gestionRelationActionVIP = new javax.swing.JDialog();
        panTable = new javax.swing.JPanel();
        scrollTable = new javax.swing.JScrollPane();
        tableConsultVIP = new javax.swing.JTable();
        btnSupRelationActionVIP = new javax.swing.JButton();
        panAjoutRelationActionVIP = new javax.swing.JPanel();
        lblType = new javax.swing.JLabel();
        radioBtnTypeAction = new javax.swing.JRadioButton();
        radioBtnTypeRelation = new javax.swing.JRadioButton();
        lblDescriptif = new javax.swing.JLabel();
        txtFieldDescriptif = new javax.swing.JTextField();
        lblProtagoniste1 = new javax.swing.JLabel();
        comboBoxProtagoniste1 = new javax.swing.JComboBox();
        btnAjoutConsult = new javax.swing.JButton();
        barreOutilVIPconsult = new javax.swing.JMenuBar();
        fichierVIPconsult = new javax.swing.JMenu();
        menuItemQuitter = new javax.swing.JMenuItem();
        btnGroupActionRelation = new javax.swing.ButtonGroup();
        lbAccueil = new javax.swing.JLabel();
        btMatchs = new javax.swing.JButton();
        btVIP = new javax.swing.JButton();
        barreOutilsPrincipal = new javax.swing.JMenuBar();
        menuFichierPrinicpal = new javax.swing.JMenu();
        menuQuitterPrincipal = new javax.swing.JMenuItem();

        gestionMatchs.setTitle("Gestion des Matchs");
        gestionMatchs.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                gestionMatchsWindowClosing(evt);
            }
        });

        lbPlanning.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbPlanning.setText("Planning des matchs : ");

        lbNumJour.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbNumJour.setText("22/01");

        panPlanning.setBorder(javax.swing.BorderFactory.createTitledBorder("Planning"));

        panMatch1.setBorder(javax.swing.BorderFactory.createTitledBorder("Court central"));

        match1J1.setText("Joueur 1");

        match1vs.setText("VS");

        match1J2.setText("Joueur 2");

        match1Plus.setText("+");

        javax.swing.GroupLayout panMatch1Layout = new javax.swing.GroupLayout(panMatch1);
        panMatch1.setLayout(panMatch1Layout);
        panMatch1Layout.setHorizontalGroup(
            panMatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(match1J1)
                .addGap(18, 18, 18)
                .addComponent(match1vs)
                .addGroup(panMatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panMatch1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(match1Plus))
                    .addGroup(panMatch1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(match1J2)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        panMatch1Layout.setVerticalGroup(
            panMatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panMatch1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(match1J1)
                    .addComponent(match1vs)
                    .addComponent(match1J2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(match1Plus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panMatch2.setBorder(javax.swing.BorderFactory.createTitledBorder("Court annexe"));

        match2J1.setText("Joueur 1");

        match2vs.setText("VS");

        match2J2.setText("Joueur 2");

        match2Pus.setText("+");

        javax.swing.GroupLayout panMatch2Layout = new javax.swing.GroupLayout(panMatch2);
        panMatch2.setLayout(panMatch2Layout);
        panMatch2Layout.setHorizontalGroup(
            panMatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch2Layout.createSequentialGroup()
                .addGroup(panMatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panMatch2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(match2J1)
                        .addGap(18, 18, 18)
                        .addComponent(match2vs)
                        .addGap(18, 18, 18)
                        .addComponent(match2J2))
                    .addGroup(panMatch2Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(match2Pus)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panMatch2Layout.setVerticalGroup(
            panMatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panMatch2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(match2J1)
                    .addComponent(match2vs)
                    .addComponent(match2J2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(match2Pus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panMatch3.setBorder(javax.swing.BorderFactory.createTitledBorder("Court d'entrainement 1"));
        panMatch3.setPreferredSize(new java.awt.Dimension(347, 168));

        match3J1.setText("Joueur 1");

        match3vs.setText("VS");

        match3J2.setText("Joueur 2");

        match3Plus.setText("+");

        javax.swing.GroupLayout panMatch3Layout = new javax.swing.GroupLayout(panMatch3);
        panMatch3.setLayout(panMatch3Layout);
        panMatch3Layout.setHorizontalGroup(
            panMatch3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch3Layout.createSequentialGroup()
                .addGroup(panMatch3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panMatch3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(match3J1)
                        .addGap(18, 18, 18)
                        .addComponent(match3vs)
                        .addGap(18, 18, 18)
                        .addComponent(match3J2))
                    .addGroup(panMatch3Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(match3Plus)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panMatch3Layout.setVerticalGroup(
            panMatch3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panMatch3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(match3J1)
                    .addComponent(match3vs)
                    .addComponent(match3J2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(match3Plus)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        panMatch4.setBorder(javax.swing.BorderFactory.createTitledBorder("Court d'entrainement 2"));

        match4J1.setText("Joueur 1");

        match4vs.setText("VS");

        match4J2.setText("Joueur 2");

        match4Plus.setText("+");

        javax.swing.GroupLayout panMatch4Layout = new javax.swing.GroupLayout(panMatch4);
        panMatch4.setLayout(panMatch4Layout);
        panMatch4Layout.setHorizontalGroup(
            panMatch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch4Layout.createSequentialGroup()
                .addGroup(panMatch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panMatch4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(match4J1)
                        .addGap(18, 18, 18)
                        .addComponent(match4vs)
                        .addGap(18, 18, 18)
                        .addComponent(match4J2))
                    .addGroup(panMatch4Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(match4Plus)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panMatch4Layout.setVerticalGroup(
            panMatch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panMatch4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(match4J1)
                    .addComponent(match4vs)
                    .addComponent(match4J2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(match4Plus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panMatch5.setBorder(javax.swing.BorderFactory.createTitledBorder("Court d'entrainement 3"));

        match5J1.setText("Joueur 1");

        match5vs.setText("VS");

        match5J2.setText("Joueur 2");

        match5Plus.setText("+");

        javax.swing.GroupLayout panMatch5Layout = new javax.swing.GroupLayout(panMatch5);
        panMatch5.setLayout(panMatch5Layout);
        panMatch5Layout.setHorizontalGroup(
            panMatch5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch5Layout.createSequentialGroup()
                .addGroup(panMatch5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panMatch5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(match5J1)
                        .addGap(18, 18, 18)
                        .addComponent(match5vs)
                        .addGap(18, 18, 18)
                        .addComponent(match5J2))
                    .addGroup(panMatch5Layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(match5Plus)))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        panMatch5Layout.setVerticalGroup(
            panMatch5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panMatch5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(match5J1)
                    .addComponent(match5vs)
                    .addComponent(match5J2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(match5Plus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panMatch6.setBorder(javax.swing.BorderFactory.createTitledBorder("Court d'entrainement 6"));

        match6J1.setText("Joueur 1");

        match6vs.setText("VS");

        match6J2.setText("Joueur 2");

        match6Plus.setText("+");

        javax.swing.GroupLayout panMatch6Layout = new javax.swing.GroupLayout(panMatch6);
        panMatch6.setLayout(panMatch6Layout);
        panMatch6Layout.setHorizontalGroup(
            panMatch6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch6Layout.createSequentialGroup()
                .addGroup(panMatch6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panMatch6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(match6J1)
                        .addGap(18, 18, 18)
                        .addComponent(match6vs)
                        .addGap(18, 18, 18)
                        .addComponent(match6J2))
                    .addGroup(panMatch6Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(match6Plus)))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        panMatch6Layout.setVerticalGroup(
            panMatch6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMatch6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panMatch6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(match6J1)
                    .addComponent(match6vs)
                    .addComponent(match6J2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(match6Plus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panPlanningLayout = new javax.swing.GroupLayout(panPlanning);
        panPlanning.setLayout(panPlanningLayout);
        panPlanningLayout.setHorizontalGroup(
            panPlanningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panPlanningLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panPlanningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panMatch1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panMatch4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panPlanningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panMatch2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panMatch5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panPlanningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panMatch6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panMatch3, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))
                .addContainerGap())
        );
        panPlanningLayout.setVerticalGroup(
            panPlanningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panPlanningLayout.createSequentialGroup()
                .addGroup(panPlanningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panPlanningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(panMatch2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panMatch1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(panMatch3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panPlanningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panMatch4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panMatch5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panMatch6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        panGestion.setBorder(javax.swing.BorderFactory.createTitledBorder("Gestion"));

        btPrec.setText("<< Jour précédent");
        btPrec.setEnabled(false);
        btPrec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPrecActionPerformed(evt);
            }
        });

        btSuiv.setText("Jour suivant >>");
        btSuiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuivActionPerformed(evt);
            }
        });

        btAdd.setText("Ajouter un match");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btModif.setText("Modifier un match");

        btSupp.setText("Supprimer un match");

        btRetour.setText("Retour");
        btRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRetourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panGestionLayout = new javax.swing.GroupLayout(panGestion);
        panGestion.setLayout(panGestionLayout);
        panGestionLayout.setHorizontalGroup(
            panGestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panGestionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btPrec)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(btAdd)
                .addGap(18, 18, 18)
                .addComponent(btModif)
                .addGap(18, 18, 18)
                .addComponent(btSupp)
                .addGap(18, 18, 18)
                .addComponent(btRetour)
                .addGap(126, 126, 126)
                .addComponent(btSuiv)
                .addContainerGap())
        );
        panGestionLayout.setVerticalGroup(
            panGestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panGestionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panGestionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btPrec)
                    .addComponent(btAdd)
                    .addComponent(btModif)
                    .addComponent(btSupp)
                    .addComponent(btRetour)
                    .addComponent(btSuiv))
                .addContainerGap())
        );

        panSelect.setBorder(javax.swing.BorderFactory.createTitledBorder("Sélection"));

        courtChoice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                courtChoiceItemStateChanged(evt);
            }
        });

        heureChoice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                heureChoiceItemStateChanged(evt);
            }
        });

        lbSelectCourt.setText("Sélection du court");

        lbSelectHeure.setText("Sélection de l'horaire");

        javax.swing.GroupLayout panSelectLayout = new javax.swing.GroupLayout(panSelect);
        panSelect.setLayout(panSelectLayout);
        panSelectLayout.setHorizontalGroup(
            panSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panSelectLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(lbSelectCourt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(courtChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addComponent(lbSelectHeure)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(heureChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panSelectLayout.setVerticalGroup(
            panSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panSelectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbSelectCourt)
                    .addComponent(courtChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heureChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSelectHeure))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbSelected.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbSelected.setText("8h");

        menuFichierMatch.setText("Fichier");

        menuQuitterMatch.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuQuitterMatch.setText("Quitter");
        menuQuitterMatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuQuitterMatchActionPerformed(evt);
            }
        });
        menuFichierMatch.add(menuQuitterMatch);

        barreOutilsMatch.add(menuFichierMatch);

        gestionMatchs.setJMenuBar(barreOutilsMatch);

        javax.swing.GroupLayout gestionMatchsLayout = new javax.swing.GroupLayout(gestionMatchs.getContentPane());
        gestionMatchs.getContentPane().setLayout(gestionMatchsLayout);
        gestionMatchsLayout.setHorizontalGroup(
            gestionMatchsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gestionMatchsLayout.createSequentialGroup()
                .addGroup(gestionMatchsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gestionMatchsLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(lbPlanning)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbNumJour)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbSelected)
                        .addGap(82, 82, 82))
                    .addGroup(gestionMatchsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panGestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(gestionMatchsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panPlanning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(gestionMatchsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panSelect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        gestionMatchsLayout.setVerticalGroup(
            gestionMatchsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gestionMatchsLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(gestionMatchsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPlanning)
                    .addComponent(lbNumJour)
                    .addComponent(lbSelected))
                .addGap(18, 18, 18)
                .addComponent(panPlanning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panGestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gestionVIP.setTitle("Gestion des VIP");
        gestionVIP.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                gestionVIPWindowClosing(evt);
            }
        });

        panListeVIP.setBorder(javax.swing.BorderFactory.createTitledBorder("Liste VIP"));

        tableVIP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOM", "PRENOM", "DATE DE NAISSANCE", "Type de VIP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollTableVIP.setViewportView(tableVIP);

        javax.swing.GroupLayout panListeVIPLayout = new javax.swing.GroupLayout(panListeVIP);
        panListeVIP.setLayout(panListeVIPLayout);
        panListeVIPLayout.setHorizontalGroup(
            panListeVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panListeVIPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollTableVIP, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                .addContainerGap())
        );
        panListeVIPLayout.setVerticalGroup(
            panListeVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panListeVIPLayout.createSequentialGroup()
                .addComponent(scrollTableVIP, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        panGestionVIP.setBorder(javax.swing.BorderFactory.createTitledBorder("Gestion VIP"));

        btnSuppr.setText("Supprimer");
        btnSuppr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprActionPerformed(evt);
            }
        });

        btnConsult.setText("Consulter relations & actions VIP");
        btnConsult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultActionPerformed(evt);
            }
        });

        panAjoutVIP.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajout d'un VIP"));

        nom.setText("Nom :");

        prenom.setText("Prénom :");

        birthdate.setText("Date de naissance (jj/mm/aaa) :");

        txtFieldNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldNomActionPerformed(evt);
            }
        });

        ajouterVIP.setText("Ajouter");
        ajouterVIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterVIPActionPerformed(evt);
            }
        });

        BtnGroupJCAIJ.add(radioBtnJoueur);
        radioBtnJoueur.setText("Joueur");
        radioBtnJoueur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnJoueurActionPerformed(evt);
            }
        });

        BtnGroupJCAIJ.add(radioBtnCoach);
        radioBtnCoach.setText("Coach");
        radioBtnCoach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnCoachActionPerformed(evt);
            }
        });

        BtnGroupJCAIJ.add(radioBtnArbitre);
        radioBtnArbitre.setText("Arbitre");
        radioBtnArbitre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnArbitreActionPerformed(evt);
            }
        });

        BtnGroupJCAIJ.add(radioBtnInviteSpe);
        radioBtnInviteSpe.setText("Invité spécial");
        radioBtnInviteSpe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnInviteSpeActionPerformed(evt);
            }
        });

        BtnGroupJCAIJ.add(radioBtnJournaliste);
        radioBtnJournaliste.setText("Journaliste");
        radioBtnJournaliste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnJournalisteActionPerformed(evt);
            }
        });

        lblRange.setText("Rang :");

        txtFieldRang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldRangActionPerformed(evt);
            }
        });

        lblJoueurCoach.setText("Joueur Coaché :");

        lblRepCoach.setText("Réputation Coach :");

        lblNbMatchArbitre.setText("Nombre match arbitrés :");

        lblCategArbitre.setText("Catégorie d'arbitre :");

        javax.swing.GroupLayout panAjoutVIPLayout = new javax.swing.GroupLayout(panAjoutVIP);
        panAjoutVIP.setLayout(panAjoutVIPLayout);
        panAjoutVIPLayout.setHorizontalGroup(
            panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAjoutVIPLayout.createSequentialGroup()
                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panAjoutVIPLayout.createSequentialGroup()
                        .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panAjoutVIPLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(birthdate)
                                    .addComponent(prenom)
                                    .addComponent(nom))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFieldPrenom)
                                    .addComponent(txtFieldBirthdate)
                                    .addComponent(txtFieldNom, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                            .addGroup(panAjoutVIPLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(radioBtnJoueur)
                                .addGap(18, 18, 18)
                                .addComponent(radioBtnCoach)
                                .addGap(18, 18, 18)
                                .addComponent(radioBtnArbitre)
                                .addGap(18, 18, 18)
                                .addComponent(radioBtnInviteSpe)
                                .addGap(18, 18, 18)
                                .addComponent(radioBtnJournaliste)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panAjoutVIPLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panAjoutVIPLayout.createSequentialGroup()
                                .addComponent(lblRepCoach)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFieldRepCoach, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panAjoutVIPLayout.createSequentialGroup()
                                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblJoueurCoach)
                                    .addComponent(lblRange))
                                .addGap(18, 18, 18)
                                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFieldJoueurCoach)
                                    .addComponent(txtFieldRang))))
                        .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panAjoutVIPLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ajouterVIP))
                            .addGroup(panAjoutVIPLayout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNbMatchArbitre)
                                    .addComponent(lblCategArbitre))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFieldNbMatchArbitre, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                                    .addComponent(txtFieldCategArbitre))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        panAjoutVIPLayout.setVerticalGroup(
            panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAjoutVIPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nom)
                    .addComponent(txtFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prenom)
                    .addComponent(txtFieldPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(birthdate)
                    .addComponent(txtFieldBirthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioBtnJoueur)
                    .addComponent(radioBtnCoach)
                    .addComponent(radioBtnArbitre)
                    .addComponent(radioBtnInviteSpe)
                    .addComponent(radioBtnJournaliste))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRange)
                    .addComponent(txtFieldRang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNbMatchArbitre)
                    .addComponent(txtFieldNbMatchArbitre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblJoueurCoach)
                    .addComponent(txtFieldJoueurCoach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCategArbitre)
                    .addComponent(txtFieldCategArbitre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panAjoutVIPLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ajouterVIP)
                        .addContainerGap())
                    .addGroup(panAjoutVIPLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panAjoutVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRepCoach)
                            .addComponent(txtFieldRepCoach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(22, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout panGestionVIPLayout = new javax.swing.GroupLayout(panGestionVIP);
        panGestionVIP.setLayout(panGestionVIPLayout);
        panGestionVIPLayout.setHorizontalGroup(
            panGestionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panGestionVIPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panGestionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panAjoutVIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panGestionVIPLayout.createSequentialGroup()
                        .addComponent(btnConsult)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSuppr)))
                .addContainerGap())
        );
        panGestionVIPLayout.setVerticalGroup(
            panGestionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panGestionVIPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panGestionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsult)
                    .addComponent(btnSuppr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panAjoutVIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuFichierVIP.setText("Fichier");

        menuQuitterVIP.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuQuitterVIP.setText("Quitter");
        menuQuitterVIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuQuitterVIPActionPerformed(evt);
            }
        });
        menuFichierVIP.add(menuQuitterVIP);

        barreOutilsVIP.add(menuFichierVIP);

        gestionVIP.setJMenuBar(barreOutilsVIP);

        javax.swing.GroupLayout gestionVIPLayout = new javax.swing.GroupLayout(gestionVIP.getContentPane());
        gestionVIP.getContentPane().setLayout(gestionVIPLayout);
        gestionVIPLayout.setHorizontalGroup(
            gestionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gestionVIPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gestionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panListeVIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panGestionVIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        gestionVIPLayout.setVerticalGroup(
            gestionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gestionVIPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panListeVIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panGestionVIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        fenAddMatch.setTitle("Ajouter un match");
        fenAddMatch.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                fenAddMatchWindowClosing(evt);
            }
        });

        addFen_PanJoueurs.setBorder(javax.swing.BorderFactory.createTitledBorder("Sélection des joueurs"));

        addFen_lbJ1.setText("Joueur 1 : ");

        addFen_lbVs.setText("VS");

        addFen_lbJ2.setText("Joueur 2 :");

        addFen_choiceJ1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addFen_choiceJ1ItemStateChanged(evt);
            }
        });

        addFen_choiceJ2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addFen_choiceJ2ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout addFen_PanJoueursLayout = new javax.swing.GroupLayout(addFen_PanJoueurs);
        addFen_PanJoueurs.setLayout(addFen_PanJoueursLayout);
        addFen_PanJoueursLayout.setHorizontalGroup(
            addFen_PanJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFen_PanJoueursLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addFen_lbJ1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFen_choiceJ1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFen_lbVs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFen_lbJ2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFen_choiceJ2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addFen_PanJoueursLayout.setVerticalGroup(
            addFen_PanJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFen_PanJoueursLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addFen_PanJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addFen_choiceJ2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addFen_lbJ1)
                    .addComponent(addFen_choiceJ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addFen_PanJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addFen_lbVs)
                        .addComponent(addFen_lbJ2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addFen_PanHeure.setBorder(javax.swing.BorderFactory.createTitledBorder("Sélection de l'heure"));

        addFen_lbChoixHeure.setText("Choisissez une horaire disponible :");

        addFen_choiceHeure.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addFen_choiceHeureItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout addFen_PanHeureLayout = new javax.swing.GroupLayout(addFen_PanHeure);
        addFen_PanHeure.setLayout(addFen_PanHeureLayout);
        addFen_PanHeureLayout.setHorizontalGroup(
            addFen_PanHeureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFen_PanHeureLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(addFen_lbChoixHeure)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFen_choiceHeure, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addFen_PanHeureLayout.setVerticalGroup(
            addFen_PanHeureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFen_PanHeureLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addFen_PanHeureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addFen_choiceHeure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addFen_lbChoixHeure))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addFen_PanCourt.setBorder(javax.swing.BorderFactory.createTitledBorder("Sélection du court"));

        addFen_lbChoixCourt.setText("Choisissez un court disponible : ");
        addFen_lbChoixCourt.setToolTipText("");

        addFen_choiceCourt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addFen_choiceCourtItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout addFen_PanCourtLayout = new javax.swing.GroupLayout(addFen_PanCourt);
        addFen_PanCourt.setLayout(addFen_PanCourtLayout);
        addFen_PanCourtLayout.setHorizontalGroup(
            addFen_PanCourtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFen_PanCourtLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(addFen_lbChoixCourt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFen_choiceCourt, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addFen_PanCourtLayout.setVerticalGroup(
            addFen_PanCourtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFen_PanCourtLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addFen_PanCourtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addFen_choiceCourt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addFen_lbChoixCourt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addFen_btAdd.setText("Ajouter");
        addFen_btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFen_btAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fenAddMatchLayout = new javax.swing.GroupLayout(fenAddMatch.getContentPane());
        fenAddMatch.getContentPane().setLayout(fenAddMatchLayout);
        fenAddMatchLayout.setHorizontalGroup(
            fenAddMatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fenAddMatchLayout.createSequentialGroup()
                .addGroup(fenAddMatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fenAddMatchLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(fenAddMatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addFen_PanHeure, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addFen_PanJoueurs, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addFen_PanCourt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(fenAddMatchLayout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(addFen_btAdd)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fenAddMatchLayout.setVerticalGroup(
            fenAddMatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fenAddMatchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addFen_PanJoueurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFen_PanHeure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFen_PanCourt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addFen_btAdd)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panTable.setBorder(javax.swing.BorderFactory.createTitledBorder("Relations & Actions des VIP"));

        tableConsultVIP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Descriptif", "Protagoniste(s)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollTable.setViewportView(tableConsultVIP);

        btnSupRelationActionVIP.setText("Supprimer");
        btnSupRelationActionVIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupRelationActionVIPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panTableLayout = new javax.swing.GroupLayout(panTable);
        panTable.setLayout(panTableLayout);
        panTableLayout.setHorizontalGroup(
            panTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSupRelationActionVIP)
                    .addComponent(scrollTable, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );
        panTableLayout.setVerticalGroup(
            panTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scrollTable, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSupRelationActionVIP))
        );

        panAjoutRelationActionVIP.setBorder(javax.swing.BorderFactory.createTitledBorder("Ajouter une relation ou une action VIP"));

        lblType.setText("Type :");

        btnGroupActionRelation.add(radioBtnTypeAction);
        radioBtnTypeAction.setText("Action");
        radioBtnTypeAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnTypeActionActionPerformed(evt);
            }
        });

        btnGroupActionRelation.add(radioBtnTypeRelation);
        radioBtnTypeRelation.setText("Relation");
        radioBtnTypeRelation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnTypeRelationActionPerformed(evt);
            }
        });

        lblDescriptif.setText("Descriptif :");

        txtFieldDescriptif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldDescriptifActionPerformed(evt);
            }
        });

        lblProtagoniste1.setText("VIP concerné :");

        comboBoxProtagoniste1.setMaximumRowCount(100);
        comboBoxProtagoniste1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxProtagoniste1ActionPerformed(evt);
            }
        });

        btnAjoutConsult.setText("Ajouter");
        btnAjoutConsult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjoutConsultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panAjoutRelationActionVIPLayout = new javax.swing.GroupLayout(panAjoutRelationActionVIP);
        panAjoutRelationActionVIP.setLayout(panAjoutRelationActionVIPLayout);
        panAjoutRelationActionVIPLayout.setHorizontalGroup(
            panAjoutRelationActionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAjoutRelationActionVIPLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panAjoutRelationActionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panAjoutRelationActionVIPLayout.createSequentialGroup()
                        .addGroup(panAjoutRelationActionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblType)
                            .addGroup(panAjoutRelationActionVIPLayout.createSequentialGroup()
                                .addComponent(radioBtnTypeAction)
                                .addGap(18, 18, 18)
                                .addComponent(radioBtnTypeRelation)))
                        .addGap(35, 35, 35)
                        .addComponent(lblProtagoniste1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBoxProtagoniste1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panAjoutRelationActionVIPLayout.createSequentialGroup()
                        .addComponent(lblDescriptif)
                        .addGap(18, 18, 18)
                        .addComponent(txtFieldDescriptif, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149)
                        .addComponent(btnAjoutConsult)))
                .addContainerGap())
        );
        panAjoutRelationActionVIPLayout.setVerticalGroup(
            panAjoutRelationActionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAjoutRelationActionVIPLayout.createSequentialGroup()
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panAjoutRelationActionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType)
                    .addComponent(lblProtagoniste1)
                    .addComponent(comboBoxProtagoniste1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(panAjoutRelationActionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioBtnTypeAction)
                    .addComponent(radioBtnTypeRelation))
                .addGap(26, 26, 26)
                .addGroup(panAjoutRelationActionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescriptif)
                    .addComponent(txtFieldDescriptif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAjoutConsult)))
        );

        fichierVIPconsult.setText("Fichier");

        menuItemQuitter.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        menuItemQuitter.setText("Quitter");
        menuItemQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemQuitterActionPerformed(evt);
            }
        });
        fichierVIPconsult.add(menuItemQuitter);

        barreOutilVIPconsult.add(fichierVIPconsult);

        gestionRelationActionVIP.setJMenuBar(barreOutilVIPconsult);

        javax.swing.GroupLayout gestionRelationActionVIPLayout = new javax.swing.GroupLayout(gestionRelationActionVIP.getContentPane());
        gestionRelationActionVIP.getContentPane().setLayout(gestionRelationActionVIPLayout);
        gestionRelationActionVIPLayout.setHorizontalGroup(
            gestionRelationActionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gestionRelationActionVIPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gestionRelationActionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panAjoutRelationActionVIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panTable, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gestionRelationActionVIPLayout.setVerticalGroup(
            gestionRelationActionVIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gestionRelationActionVIPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panAjoutRelationActionVIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Gestion du Grand Prix de Tennis de Lyon");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lbAccueil.setFont(new java.awt.Font("Tahoma", 2, 36)); // NOI18N
        lbAccueil.setText("Accueil");

        btMatchs.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btMatchs.setText("Gestion des matchs");
        btMatchs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMatchsActionPerformed(evt);
            }
        });

        btVIP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btVIP.setText("Gestion des VIP");
        btVIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVIPActionPerformed(evt);
            }
        });

        menuFichierPrinicpal.setText("Fichier");

        menuQuitterPrincipal.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuQuitterPrincipal.setText("Quitter");
        menuFichierPrinicpal.add(menuQuitterPrincipal);

        barreOutilsPrincipal.add(menuFichierPrinicpal);

        setJMenuBar(barreOutilsPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbAccueil, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(btVIP))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btMatchs)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbAccueil)
                .addGap(62, 62, 62)
                .addComponent(btMatchs)
                .addGap(31, 31, 31)
                .addComponent(btVIP)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        quitter();
    }//GEN-LAST:event_formWindowClosing

    private void btMatchsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMatchsActionPerformed
        dispose();
        gestionMatchs.setVisible(true);
    }//GEN-LAST:event_btMatchsActionPerformed

    private void btVIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVIPActionPerformed
        dispose();
        gestionVIP.setVisible(true);
    }//GEN-LAST:event_btVIPActionPerformed

    private void menuQuitterMatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuQuitterMatchActionPerformed
        gestionMatchs.setVisible(false);
        setVisible(true);
    }//GEN-LAST:event_menuQuitterMatchActionPerformed

    private void gestionMatchsWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_gestionMatchsWindowClosing
        gestionMatchs.setVisible(false);
        setVisible(true);
    }//GEN-LAST:event_gestionMatchsWindowClosing

    private void menuQuitterVIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuQuitterVIPActionPerformed
        gestionVIP.setVisible(false);
        setVisible(true);
    }//GEN-LAST:event_menuQuitterVIPActionPerformed

    private void gestionVIPWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_gestionVIPWindowClosing
        gestionVIP.setVisible(false);
        setVisible(true);
    }//GEN-LAST:event_gestionVIPWindowClosing

    private void btPrecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPrecActionPerformed
        if (jour != 22) {
            try {
                jour--;
                afficherMatchs();
            } catch (IOException | SQLException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btPrecActionPerformed

    private void btSuivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuivActionPerformed
        if (jour != 30) {
            try {
                jour++;
                afficherMatchs();
            } catch (IOException | SQLException ex) {
                Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btSuivActionPerformed

    private void courtChoiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_courtChoiceItemStateChanged
        if (courtChoice.getSelectedItem().equals("Tous") && heureChoice.getSelectedItem().equals("Tous")) {
            JOptionPane.showMessageDialog(this, "Impossible d'afficher tous les terrains pour toutes "
                    + "les horaires.", "Erreur", JOptionPane.OK_OPTION);
            courtChoice.select("Court central");
        }
        else
            try {
            afficherMatchs();
        } catch (IOException | SQLException ex) {
            Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_courtChoiceItemStateChanged

    private void heureChoiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_heureChoiceItemStateChanged
        if (courtChoice.getSelectedItem().equals("Tous") && heureChoice.getSelectedItem().equals("Tous")) {
            JOptionPane.showMessageDialog(this, "Impossible d'afficher tous les terrains pour toutes "
                    + "les horaires.", "Erreur", JOptionPane.OK_OPTION);
            heureChoice.select("8h");
        }
        else
            try {
            afficherMatchs();
        } catch (IOException | SQLException ex) {
            Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_heureChoiceItemStateChanged

    private void btRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRetourActionPerformed
        gestionMatchs.setVisible(false);
        setVisible(true);
    }//GEN-LAST:event_btRetourActionPerformed

    private void btnSupprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprActionPerformed
        supprimerVIP(tableVIP);
    }//GEN-LAST:event_btnSupprActionPerformed

    private void btnConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultActionPerformed
        dispose();
        gestionRelationActionVIP.setVisible(true);
    }//GEN-LAST:event_btnConsultActionPerformed

    private void txtFieldNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldNomActionPerformed

    private void ajouterVIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterVIPActionPerformed
        ajouterVIP(tableVIP);
        txtFieldRang.setText("");
        txtFieldCategArbitre.setText("");
        txtFieldJoueurCoach.setText("");
        txtFieldNbMatchArbitre.setText("");
        txtFieldRepCoach.setText("");
        txtFieldNom.setText("");
        txtFieldPrenom.setText("");
        txtFieldBirthdate.setText("");
    }//GEN-LAST:event_ajouterVIPActionPerformed

    private void radioBtnJoueurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnJoueurActionPerformed
        txtFieldCategArbitre.setEnabled(false);
        txtFieldJoueurCoach.setEnabled(false);
        txtFieldNbMatchArbitre.setEnabled(false);
        txtFieldRang.setEnabled(true);
        txtFieldRepCoach.setEnabled(false);
        
        txtFieldCategArbitre.setText("");
        txtFieldJoueurCoach.setText("");
        txtFieldNbMatchArbitre.setText("");
        txtFieldRepCoach.setText("");
    }//GEN-LAST:event_radioBtnJoueurActionPerformed

    private void txtFieldRangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldRangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldRangActionPerformed

    private void radioBtnCoachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnCoachActionPerformed
        txtFieldCategArbitre.setEnabled(false);
        txtFieldJoueurCoach.setEnabled(true);
        txtFieldNbMatchArbitre.setEnabled(false);
        txtFieldRang.setEnabled(false);
        txtFieldRepCoach.setEnabled(true);
        
        txtFieldRang.setText("");
        txtFieldCategArbitre.setText("");
        txtFieldNbMatchArbitre.setText("");
    }//GEN-LAST:event_radioBtnCoachActionPerformed

    private void radioBtnArbitreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnArbitreActionPerformed
        txtFieldCategArbitre.setEnabled(true);
        txtFieldJoueurCoach.setEnabled(false);
        txtFieldNbMatchArbitre.setEnabled(true);
        txtFieldRang.setEnabled(false);
        txtFieldRepCoach.setEnabled(false);
        
        txtFieldRang.setText("");
        txtFieldJoueurCoach.setText("");
        txtFieldRepCoach.setText("");
    }//GEN-LAST:event_radioBtnArbitreActionPerformed

    private void radioBtnInviteSpeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnInviteSpeActionPerformed
        txtFieldCategArbitre.setEnabled(false);
        txtFieldJoueurCoach.setEnabled(false);
        txtFieldNbMatchArbitre.setEnabled(false);
        txtFieldRang.setEnabled(false);
        txtFieldRepCoach.setEnabled(false);
        
        txtFieldRang.setText("");
        txtFieldCategArbitre.setText("");
        txtFieldJoueurCoach.setText("");
        txtFieldNbMatchArbitre.setText("");
        txtFieldRepCoach.setText("");
    }//GEN-LAST:event_radioBtnInviteSpeActionPerformed
     private void addFen_choiceJ1ItemStateChanged(java.awt.event.ItemEvent evt) {                                                 
        majFenAjouterMatch();
    }

    private void addFen_choiceJ2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_addFen_choiceJ2ItemStateChanged
        majFenAjouterMatch();
    }//GEN-LAST:event_addFen_choiceJ2ItemStateChanged

    private void addFen_choiceHeureItemStateChanged(java.awt.event.ItemEvent evt) {                                                    
        majFenAjouterMatch();
    }

    private void addFen_choiceCourtItemStateChanged(java.awt.event.ItemEvent evt) {                                                    
        majFenAjouterMatch();
    }
    private void radioBtnJournalisteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnJournalisteActionPerformed
        txtFieldCategArbitre.setEnabled(false);
        txtFieldJoueurCoach.setEnabled(false);
        txtFieldNbMatchArbitre.setEnabled(false);
        txtFieldRang.setEnabled(false);
        txtFieldRepCoach.setEnabled(false);
        
        txtFieldRang.setText("");
        txtFieldCategArbitre.setText("");
        txtFieldJoueurCoach.setText("");
        txtFieldNbMatchArbitre.setText("");
        txtFieldRepCoach.setText("");
    }//GEN-LAST:event_radioBtnJournalisteActionPerformed

    private void btnSupRelationActionVIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupRelationActionVIPActionPerformed
        supprimerRelationActionVIP(tableConsultVIP);
    }//GEN-LAST:event_btnSupRelationActionVIPActionPerformed

    private void txtFieldDescriptifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldDescriptifActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldDescriptifActionPerformed

    private void comboBoxProtagoniste1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxProtagoniste1ActionPerformed
        
    }//GEN-LAST:event_comboBoxProtagoniste1ActionPerformed

    private void radioBtnTypeActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnTypeActionActionPerformed
        comboBoxProtagoniste1.setEnabled(true);
        txtFieldDescriptif.setEnabled(true);
    }//GEN-LAST:event_radioBtnTypeActionActionPerformed

    private void radioBtnTypeRelationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnTypeRelationActionPerformed
        comboBoxProtagoniste1.setEnabled(true);
        txtFieldDescriptif.setEnabled(true);
    }//GEN-LAST:event_radioBtnTypeRelationActionPerformed

    private void btnAjoutConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjoutConsultActionPerformed
        ajouterRelationActionVIP(tableConsultVIP);
    }//GEN-LAST:event_btnAjoutConsultActionPerformed

    private void menuItemQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemQuitterActionPerformed
        gestionRelationActionVIP.setVisible(false);
        gestionVIP.setVisible(true);
    }//GEN-LAST:event_menuItemQuitterActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        gestionMatchs.dispose();
        fenAddMatch.setVisible(true);
        initFenAddMatch();
    }//GEN-LAST:event_btAddActionPerformed

    private void addFen_btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFen_btAddActionPerformed
        addMatch();
    }//GEN-LAST:event_addFen_btAddActionPerformed

    private void fenAddMatchWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_fenAddMatchWindowClosing
        fenAddMatch.dispose();
        gestionMatchs.setVisible(true);
    }//GEN-LAST:event_fenAddMatchWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BtnGroupJCAIJ;
    private javax.swing.JPanel addFen_PanCourt;
    private javax.swing.JPanel addFen_PanHeure;
    private javax.swing.JPanel addFen_PanJoueurs;
    private javax.swing.JButton addFen_btAdd;
    private java.awt.Choice addFen_choiceCourt;
    private java.awt.Choice addFen_choiceHeure;
    private java.awt.Choice addFen_choiceJ1;
    private java.awt.Choice addFen_choiceJ2;
    private javax.swing.JLabel addFen_lbChoixCourt;
    private javax.swing.JLabel addFen_lbChoixHeure;
    private javax.swing.JLabel addFen_lbJ1;
    private javax.swing.JLabel addFen_lbJ2;
    private javax.swing.JLabel addFen_lbVs;
    private javax.swing.JButton ajouterVIP;
    private javax.swing.JMenuBar barreOutilVIPconsult;
    private javax.swing.JMenuBar barreOutilsMatch;
    private javax.swing.JMenuBar barreOutilsPrincipal;
    private javax.swing.JMenuBar barreOutilsVIP;
    private javax.swing.JLabel birthdate;
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btMatchs;
    private javax.swing.JButton btModif;
    private javax.swing.JButton btPrec;
    private javax.swing.JButton btRetour;
    private javax.swing.JButton btSuiv;
    private javax.swing.JButton btSupp;
    private javax.swing.JButton btVIP;
    private javax.swing.JButton btnAjoutConsult;
    private javax.swing.JButton btnConsult;
    private javax.swing.ButtonGroup btnGroupActionRelation;
    private javax.swing.JButton btnSupRelationActionVIP;
    private javax.swing.JButton btnSuppr;
    private javax.swing.JComboBox comboBoxProtagoniste1;
    private java.awt.Choice courtChoice;
    private javax.swing.JDialog fenAddMatch;
    private javax.swing.JMenu fichierVIPconsult;
    private javax.swing.JDialog gestionMatchs;
    private javax.swing.JDialog gestionRelationActionVIP;
    private javax.swing.JDialog gestionVIP;
    private java.awt.Choice heureChoice;
    private javax.swing.JLabel lbAccueil;
    private javax.swing.JLabel lbNumJour;
    private javax.swing.JLabel lbPlanning;
    private javax.swing.JLabel lbSelectCourt;
    private javax.swing.JLabel lbSelectHeure;
    private javax.swing.JLabel lbSelected;
    private javax.swing.JLabel lblCategArbitre;
    private javax.swing.JLabel lblDescriptif;
    private javax.swing.JLabel lblJoueurCoach;
    private javax.swing.JLabel lblNbMatchArbitre;
    private javax.swing.JLabel lblProtagoniste1;
    private javax.swing.JLabel lblRange;
    private javax.swing.JLabel lblRepCoach;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel match1J1;
    private javax.swing.JLabel match1J2;
    private javax.swing.JButton match1Plus;
    private javax.swing.JLabel match1vs;
    private javax.swing.JLabel match2J1;
    private javax.swing.JLabel match2J2;
    private javax.swing.JButton match2Pus;
    private javax.swing.JLabel match2vs;
    private javax.swing.JLabel match3J1;
    private javax.swing.JLabel match3J2;
    private javax.swing.JButton match3Plus;
    private javax.swing.JLabel match3vs;
    private javax.swing.JLabel match4J1;
    private javax.swing.JLabel match4J2;
    private javax.swing.JButton match4Plus;
    private javax.swing.JLabel match4vs;
    private javax.swing.JLabel match5J1;
    private javax.swing.JLabel match5J2;
    private javax.swing.JButton match5Plus;
    private javax.swing.JLabel match5vs;
    private javax.swing.JLabel match6J1;
    private javax.swing.JLabel match6J2;
    private javax.swing.JButton match6Plus;
    private javax.swing.JLabel match6vs;
    private javax.swing.JMenu menuFichierMatch;
    private javax.swing.JMenu menuFichierPrinicpal;
    private javax.swing.JMenu menuFichierVIP;
    private javax.swing.JMenuItem menuItemQuitter;
    private javax.swing.JMenuItem menuQuitterMatch;
    private javax.swing.JMenuItem menuQuitterPrincipal;
    private javax.swing.JMenuItem menuQuitterVIP;
    private javax.swing.JLabel nom;
    private javax.swing.JPanel panAjoutRelationActionVIP;
    private javax.swing.JPanel panAjoutVIP;
    private javax.swing.JPanel panGestion;
    private javax.swing.JPanel panGestionVIP;
    private javax.swing.JPanel panListeVIP;
    private javax.swing.JPanel panMatch1;
    private javax.swing.JPanel panMatch2;
    private javax.swing.JPanel panMatch3;
    private javax.swing.JPanel panMatch4;
    private javax.swing.JPanel panMatch5;
    private javax.swing.JPanel panMatch6;
    private javax.swing.JPanel panPlanning;
    private javax.swing.JPanel panSelect;
    private javax.swing.JPanel panTable;
    private javax.swing.JLabel prenom;
    private javax.swing.JRadioButton radioBtnArbitre;
    private javax.swing.JRadioButton radioBtnCoach;
    private javax.swing.JRadioButton radioBtnInviteSpe;
    private javax.swing.JRadioButton radioBtnJoueur;
    private javax.swing.JRadioButton radioBtnJournaliste;
    private javax.swing.JRadioButton radioBtnTypeAction;
    private javax.swing.JRadioButton radioBtnTypeRelation;
    private javax.swing.JScrollPane scrollTable;
    private javax.swing.JScrollPane scrollTableVIP;
    private javax.swing.JTable tableConsultVIP;
    private javax.swing.JTable tableVIP;
    private javax.swing.JTextField txtFieldBirthdate;
    private javax.swing.JTextField txtFieldCategArbitre;
    private javax.swing.JTextField txtFieldDescriptif;
    private javax.swing.JTextField txtFieldJoueurCoach;
    private javax.swing.JTextField txtFieldNbMatchArbitre;
    private javax.swing.JTextField txtFieldNom;
    private javax.swing.JTextField txtFieldPrenom;
    private javax.swing.JTextField txtFieldRang;
    private javax.swing.JTextField txtFieldRepCoach;
    // End of variables declaration//GEN-END:variables

    private void quitter() {
        int rep = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment quitter ?", 
                "Attention", JOptionPane.YES_NO_OPTION);
        if (rep == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }
    
    private void afficherMatchs() throws IOException, SQLException {
        lbNumJour.setText(Integer.toString(jour)+"/01");
        if (jour == 22) btPrec.setEnabled(false);
        else if (jour == 30) btSuiv.setEnabled(false);
        else {
            btPrec.setEnabled(true);
            btSuiv.setEnabled(true);
        }
        
        if (courtChoice.getSelectedItem().equals("Tous")) {
            //Mise à jour des bordures des panels
            panMatch2.setVisible(true);
            panMatch3.setVisible(true);
            panMatch4.setVisible(true);
            panMatch5.setVisible(true);
            panMatch6.setVisible(true);
            panMatch1.setBorder(new TitledBorder("Court central"));
            panMatch2.setBorder(new TitledBorder("Court annexe"));
            panMatch3.setBorder(new TitledBorder("Court d'entrainement 1"));
            panMatch4.setBorder(new TitledBorder("Court d'entrainement 2"));
            panMatch5.setBorder(new TitledBorder("Court d'entrainement 3"));
            //Mise à jour du label indiquant la sélection
            lbSelected.setText(heureChoice.getSelectedItem());
            MatchDao mdao = fact.getMatchDao();
            remplirPlanningHeures(mdao.selectMatchByDateByHour(jour, 
                    Integer.parseInt(heureChoice.getSelectedItem().substring(0, heureChoice.getSelectedItem().indexOf("h")))));
        }
        else if (heureChoice.getSelectedItem().equals("Tous")) {
            //Mise à jour des bordures des panels
            panMatch2.setVisible(true);
            panMatch3.setVisible(true);
            panMatch4.setVisible(true);
            panMatch5.setVisible(true);
            panMatch6.setVisible(false);
            panMatch1.setBorder(new TitledBorder("8h"));
            panMatch2.setBorder(new TitledBorder("11h"));
            panMatch3.setBorder(new TitledBorder("15h"));
            panMatch4.setBorder(new TitledBorder("18h"));
            panMatch5.setBorder(new TitledBorder("21h"));
            //Mise à jour du label indiquant la sélection
            lbSelected.setText(courtChoice.getSelectedItem());
            MatchDao mdao = fact.getMatchDao();
            remplirPlanningCourts(mdao.selectMatchByTerrainByDate(jour, 
                    affecteNumCourt(courtChoice.getSelectedItem())));
        }
        else {
            //Mise à jour des bordures des panels
            panMatch2.setVisible(false);
            panMatch3.setVisible(false);
            panMatch4.setVisible(false);
            panMatch5.setVisible(false);
            panMatch6.setVisible(false);
            panMatch1.setBorder(new TitledBorder(courtChoice.getSelectedItem() + " - " + 
                    heureChoice.getSelectedItem()));
            //Mise à jour du label indiquant la sélection
            lbSelected.setText(courtChoice.getSelectedItem() + " - " + heureChoice.getSelectedItem());
            MatchDao mdao = fact.getMatchDao();
            remplirPlanningCourtHeure(mdao.selectMatchByDateByHour(jour, 
                    Integer.parseInt(heureChoice.getSelectedItem().substring(0, heureChoice.getSelectedItem().indexOf("h")))));
        }
    }
    
    private int affecteNumCourt(String terrain) {
        if (terrain.equals("Court central")) return 1;
        else if (terrain.equals("Court annexe")) return 2;
        else if (terrain.equals("Court d'entrainement 1")) return 3;
        else if (terrain.equals("Court d'entrainement 2")) return 4;
        else if (terrain.equals("Court d'entrainement 3")) return 5;
        else return 6;
    }
    
    private void remplirPlanning(JLabel j1, JLabel j2, JLabel vs, Match m) throws IOException, SQLException {
        PlayerDao pdao = fact.getPlayerDao();
        Match_playerDaoImpl mdao = fact.getMatchPlayerDao();
        Player p = pdao.selectPlayer(mdao.selectIdPlayer(m.getIdMatch()));
        
        j1.setText(p.getSurname() + " " + p.getName());
        p = pdao.selectPlayer(m.getIdP2());
        j2.setText(p.getSurname() + " " + p.getName());
        vs.setText("VS");
    }
    
    private void matchVide(JLabel j1, JLabel j2, JLabel vs) {
        vs.setText("Aucun match sur ce cours à cette heure.");
        j1.setText("");
        j2.setText("");
    }
    
    private void remplirPlanningCourtHeure(List<Match> matchs) throws SQLException, IOException {
        if (matchs.size() == 1) remplirPlanning(match6J1, match6J2, match6vs, matchs.get(0));
        else matchVide(match6J1, match6J2, match6vs);
    }
    
    private void remplirPlanningCourts(List<Match> matchs) throws SQLException, IOException {
        for (int i = 1 ; i <= 6 ; i++) {
            switch (i) {
                case 1:
                    for (Match m : matchs) {
                        if (m.getIdTerrain() == 1) remplirPlanning(match1J1, match1J2, match1vs, m);
                        else matchVide(match1J1, match1J2, match1vs);
                    }
                    break;
                case 2:
                    for (Match m : matchs) {
                        if (m.getIdTerrain() == 2) remplirPlanning(match2J1, match2J2, match2vs, m);
                        else matchVide(match2J1, match2J2, match2vs);
                    }
                    break;
                case 3:
                    for (Match m : matchs) {
                        if (m.getIdTerrain() == 3) remplirPlanning(match3J1, match3J2, match3vs, m);
                        else matchVide(match3J1, match3J2, match3vs);
                    }
                    break;
                case 4:
                    for (Match m : matchs) {
                        if (m.getIdTerrain() == 4) remplirPlanning(match4J1, match4J2, match4vs, m);
                        else matchVide(match4J1, match4J2, match4vs);
                    }
                    break;
                case 5:
                    for (Match m : matchs) {
                        if (m.getIdTerrain() == 5) remplirPlanning(match5J1, match5J2, match5vs, m);
                        else matchVide(match5J1, match5J2, match5vs);
                    }
                    break;
                case 6:
                    for (Match m : matchs) {
                        if (m.getIdTerrain() == 6) remplirPlanning(match6J1, match6J2, match6vs, m);
                        else matchVide(match6J1, match6J2, match6vs);
                    }
                    break;
            }
        }
    }
    
    private void remplirPlanningHeures(List<Match> matchs) throws SQLException, IOException {
        for (int i = 1 ; i <= 6 ; i++) {
            switch (i) {
                case 1:
                    for (Match m : matchs) {
                        if (m.getHeure() == 8) remplirPlanning(match1J1, match1J2, match1vs, m);
                        else matchVide(match1J1, match1J2, match1vs);
                    }
                    break;
                case 2:
                    for (Match m : matchs) {
                        if (m.getHeure() == 11) remplirPlanning(match2J1, match2J2, match2vs, m);
                        else matchVide(match2J1, match2J2, match2vs);
                    }
                    break;
                case 3:
                    for (Match m : matchs) {
                        if (m.getHeure() == 15) remplirPlanning(match3J1, match3J2, match3vs, m);
                        else matchVide(match3J1, match3J2, match3vs);
                    }
                    break;
                case 4:
                    for (Match m : matchs) {
                        if (m.getHeure() == 18) remplirPlanning(match4J1, match4J2, match4vs, m);
                        else matchVide(match4J1, match4J2, match4vs);
                    }
                    break;
                case 5:
                    for (Match m : matchs) {
                        if (m.getHeure() == 21) remplirPlanning(match5J1, match5J2, match5vs, m);
                        else matchVide(match5J1, match5J2, match5vs);
                    }
                    break;
            }
        }
    }
    
    private void remplirTableVIP(JTable tableVIP) throws IOException, SQLException
    {
        
        for(Player p : allPlayer)
        {
            String nomP = p.getName();
            String prenomP = p.getSurname();
            String birthdateP = p.getBirthDate();
            
            ((DefaultTableModel)tableVIP.getModel()).addRow(new Object[]{nomP,prenomP,birthdateP,"Joueur"});
        }
        for(Coach c : allCoach)
        {
            String nomC = c.getName();
            String prenomC = c.getSurname();
            String birthdateC = c.getBirthDate();
            
            ((DefaultTableModel)tableVIP.getModel()).addRow(new Object[]{nomC,prenomC,birthdateC,"Coach"});
        }
        for(Referee r : allReferee)
        {
            String nomR = r.getName();
            String prenomR = r.getSurname();
            String birthdateR = r.getBirthDate();
            
            ((DefaultTableModel)tableVIP.getModel()).addRow(new Object[]{nomR,prenomR,birthdateR,"Arbitre"});
        }
    }
    
    private void supprimerVIP(JTable tableVIP)
    {
        if(tableVIP.getSelectedRow() != -1)
            ((DefaultTableModel)tableVIP.getModel()).removeRow(tableVIP.getSelectedRow());
        else JOptionPane.showMessageDialog(this,"Aucune ligne de sélectionné","Attention",JOptionPane.OK_OPTION);
    }
    
    private void supprimerRelationActionVIP(JTable table)
    {
        if(tableConsultVIP.getSelectedRow() != -1)
            ((DefaultTableModel)tableConsultVIP.getModel()).removeRow(tableConsultVIP.getSelectedRow());
        else JOptionPane.showMessageDialog(this,"Aucune ligne de sélectionné","Attention",JOptionPane.OK_OPTION);
    }
    
    private void ajouterVIP(JTable tableVIP)
    {
        if(radioBtnJoueur.isSelected() && !txtFieldNom.getText().equals("") && !txtFieldPrenom.getText().equals("") 
                && !txtFieldBirthdate.getText().equals("") && !txtFieldRang.getText().equals(""))
        {
            ((DefaultTableModel)tableVIP.getModel())
                    .addRow(new Object[]{txtFieldNom.getText(),txtFieldPrenom.getText(),txtFieldBirthdate.getText(),"Joueur"});
        }
        else if(radioBtnCoach.isSelected() && !txtFieldNom.getText().equals("") && !txtFieldPrenom.getText().equals("") 
                && !txtFieldBirthdate.getText().equals("") && !txtFieldJoueurCoach.getText().equals("") && !txtFieldRepCoach.getText().equals(""))
        {
            ((DefaultTableModel)tableVIP.getModel())
                    .addRow(new Object[]{txtFieldNom.getText(),txtFieldPrenom.getText(),txtFieldBirthdate.getText(),"Coach"});
        }
        else if(radioBtnArbitre.isSelected() && !txtFieldNom.getText().equals("") && !txtFieldPrenom.getText().equals("") 
                && !txtFieldBirthdate.getText().equals("") && !txtFieldCategArbitre.getText().equals("") && !txtFieldNbMatchArbitre.getText().equals(""))
        {
            ((DefaultTableModel)tableVIP.getModel())
                    .addRow(new Object[]{txtFieldNom.getText(),txtFieldPrenom.getText(),txtFieldBirthdate.getText(),"Arbitre"});
        }
        else if((radioBtnInviteSpe.isSelected() || radioBtnJournaliste.isSelected()) && !txtFieldNom.getText().equals("") 
                && !txtFieldPrenom.getText().equals("") && !txtFieldBirthdate.getText().equals(""))
        {
            if(radioBtnInviteSpe.isSelected())
            {
                ((DefaultTableModel)tableVIP.getModel())
                        .addRow(new Object[]{txtFieldNom.getText(),txtFieldPrenom.getText(),txtFieldBirthdate.getText(),"Invité Spécial"});
            }
            else ((DefaultTableModel)tableVIP.getModel())
                    .addRow(new Object[]{txtFieldNom.getText(),txtFieldPrenom.getText(),txtFieldBirthdate.getText(),"Journaliste"});
        }
        else JOptionPane.showMessageDialog(this,"Certains champs ne sont pas indiqués !","Attention",JOptionPane.OK_OPTION);
    }
    
    private void remplirComboBoxConsulteVIP()
    {
        for(Player p : allPlayer)
        {
            comboBoxProtagoniste1.addItem(p.getNameSurname());
        }
        for(Coach c : allCoach)
        {
            comboBoxProtagoniste1.addItem(c.getNameSurname());
        }
        for(Referee r : allReferee)
        {
            comboBoxProtagoniste1.addItem(r.getNameSurname());
        }
    }
    
    private void ajouterRelationActionVIP(JTable table) {
        if(radioBtnTypeRelation.isSelected() && !txtFieldDescriptif.getText().equals(""))
        {
            ((DefaultTableModel)tableConsultVIP.getModel()).addRow(new Object[]{"Relation",txtFieldDescriptif.getText(),comboBoxProtagoniste1.getSelectedItem()});
        }
        else if(radioBtnTypeAction.isSelected() && !txtFieldDescriptif.getText().equals(""))
        {
            ((DefaultTableModel)tableConsultVIP.getModel())
                        .addRow(new Object[]{"Action",txtFieldDescriptif.getText(),comboBoxProtagoniste1.getSelectedItem()});
        }
        else JOptionPane.showMessageDialog(this,"Certains champs ne sont pas indiqués !","Attention",JOptionPane.OK_OPTION);
    }
    
    private void addMatch() {
        if (addFen_choiceJ1.getSelectedItem().equals("Aucun joueur sélectionné") || 
                addFen_choiceJ2.getSelectedItem().equals("Aucun joueur sélectionné") || 
                addFen_choiceCourt.getSelectedItem().equals("Aucun court sélectionné") || 
                addFen_choiceHeure.getSelectedItem().equals("Aucune heure sélectionnée")) {
            //Générer erreur
            JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs !", 
                "Erreur", JOptionPane.OK_OPTION);
        }
        else {
            //Création du match
        }
    }
    
    private void majFenAjouterMatch() {
        String j1Select = addFen_choiceJ1.getSelectedItem();
        String j2Select = addFen_choiceJ2.getSelectedItem();
        String courtSelect = addFen_choiceCourt.getSelectedItem();
        String heureSelect = addFen_choiceHeure.getSelectedItem();
        
        addFen_choiceJ1.removeAll();
        addFen_choiceJ2.removeAll();
        addFen_choiceCourt.removeAll();
        addFen_choiceHeure.removeAll();
        
        addFen_choiceJ1.addItem("Aucun joueur sélectionné");
        addFen_choiceJ2.addItem("Aucun joueur sélectionné");
        addFen_choiceCourt.addItem("Aucun court sélectionné");
        addFen_choiceHeure.addItem("Aucune heure sélectionnée");
        
        //MAJ J1
        //ListeComplete = select allPlayer;
        //listeJoueur = Select * from player where id = ?;
        //listeHeure = Select * from player where id in (select id from player_match where matchid in (select idmatch from match where heure = ? et jour = ?));
        //listeCourt = Select * from player where id in (select id from player_match where matchid in (select idmatch from match where court = ? et jour = ? et heure = ?));
        
        //for (Player p : listeJoueur) listeComplete.remove(p);
        //for (Player p : listeHeure) listeComplete.remove(p);
        //for (Player p : listeCourt) listeComplete.remove(p);
        //for (Player p : listeComplete) addFen_choiceJ1.addItem(p.getSurname + " " + p.getName);
        //addFen_choiceJ1.select(j1Select);
        
        
        //MAJ J2
        //ListeComplete = select allPlayer;
        //listeJoueur = Select * from player where id = ?;
        //listeHeure = Select * from player where id in (select id from player_match where matchid in (select idmatch from match where heure = ? et jour = ?));
        //listeCourt = Select * from player where id in (select id from player_match where matchid in (select idmatch from match where court = ? et jour = ? et heure = ?));
        
        //for (Player p : listeJoueur) listeComplete.remove(p);
        //for (Player p : listeHeure) listeComplete.remove(p);
        //for (Player p : listeCourt) listeComplete.remove(p);
        //for (Player p : listeComplete) addFen_choiceJ2.addItem(p.getSurname + " " + p.getName);
        //addFen_choiceJ2.select(j2Select);
        
        //MAJ COURT
        //List<String> allCourts= new ArrayList<>();
        //allCourts.add("Court central");
        //allCourts.add("Court annexe");
        //allCourts.add("Court d'entrainement 1");
        //allCourts.add("Court d'entrainement 2");
        //allCourts.add("Court d'entrainement 3");
        //allCourts.add("Court d'entrainement 4");
        //int[] listeUse = Select court from match where idmatch in (select idmatch from match where jour = ? et heure = ?);
        //for (int i = listeUse.size() - 1 ; i >= 0 ; i++) allCourts.remove(listeUse[i]);
        //for (String s : allCourts) addFen_choiceCourt.addItem(s);
        //addFen_choiceCourt.select(courtSelect);
        
        //MAJ HEURE
        //List<String> allHeures = new ArrayList<>();
        //allCourts.add("8h");
        //allCourts.add("11h");
        //allCourts.add("15h");
        //allCourts.add("18h");
        //allCourts.add("21h");
        //int[] listeUse = Select heure from match where idmatch in (select idmatch from match where jour = ? et court = ?);
        //for (int i = listeUse.size() - 1 ; i >= 0 ; i++) allHeures.remove(listeUse[i]);
        //for (String s : allHeures) addFen_choiceHeure.addItem(s);
        //addFen_heureCourt.select(heureSelect);
        
        addFen_choiceJ1.select(j1Select);
        addFen_choiceJ2.select(j2Select);
        addFen_choiceCourt.select(courtSelect);
        addFen_choiceHeure.select(heureSelect);
    }
    
    private void initFenAddMatch() {
        addFen_choiceJ1.addItem("Aucun joueur sélectionné");
        addFen_choiceJ2.addItem("Aucun joueur sélectionné");
        addFen_choiceCourt.addItem("Aucun court sélectionné");
        addFen_choiceHeure.addItem("Aucune heure sélectionnée");
        
        addFen_choiceJ1.select("Aucun joueur sélectionné");
        addFen_choiceJ2.select("Aucun joueur sélectionné");
        addFen_choiceCourt.select("Aucun court sélectionné");
        addFen_choiceHeure.select("Aucune heure sélectionnée");
    }
}
